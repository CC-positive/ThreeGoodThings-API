openapi: 3.0.0
info:
  version: 1.0.0
  title: ThreeGoodThings-API Specification
  description: This is the specification of ThreeGoodThings-API. See [https://github.com/CC-positive/ThreeGoodThings-API](https://github.com/CC-positive/ThreeGoodThings-API)
paths:
  /v1/threetter/posts:
    get:
      summary: Get all threetter posts records.
      description: 全レコードを返却します.
      responses:
        '200':
          description: HTTPステータスコード200と以下の情報を含むJSONオブジェクトを返します。
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: "object"
                  properties:
                    id:
                      type: string
                      example: "fdc357de-4d85-4e4f-9c10-6d9bd5143849"
                    date:
                      type: string
                      example: "2020-11-20T07:06:09.247Z"
                    user:
                      type: "object"
                      properties: 
                        id:
                          type: string
                          example: "4a1f6310-1b15-4c10-8fd4-fd2140e8d03b"
                        name:
                          type: string
                          example: "一郎"
                    tgts:
                      type: "object"
                      properties: 
                        id1:
                          type: string
                          example: "93b9332c-93cb-474d-8636-780f1a6f3cd7"
                        text1:
                          type: string
                          example: "今日は禁煙できた１！"
                        id2:
                          type: string
                          example: "93b9332c-93cb-474d-8636-780f1a6f3cd8"
                        text2:
                          type: string
                          example: "今日は禁煙できた２！"
                        id3:
                          type: string
                          example: "93b9332c-93cb-474d-8636-780f1a6f3cd9"
                        text3:
                          type: string
                          example: "今日は禁煙できた３！"
    post:
      summary: Post a tgt record which you send in request body.
      description: ボディで指定された列を持つレコードをpostテーブル、tgtテーブルにそれぞれ新規追加します.
      parameters:
      - name: "x-googleid"
        in: "header"
        description: "infomation of target user googleID"
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema: 
              type: "object"
              properties:
                userName:
                  type: string
                  example: 太郎
                tgt1:
                  type: string
                  example: 今日は禁煙できた！
                tgt2:
                  type: string
                  example: ゆで卵が美味しかった。
                tgt3:
                  type: string
                  example: ご飯が美味しく炊けた。
      responses:
        '201':
          description: 当日分TGT投稿がない場合はpostテーブル、TGTテーブルにレコードを挿入しHTTPステータスコード201が返却されます。
        '422':
          description: 当日分TGT投稿がある場合、2重投稿と見なしレコード挿入を中止、HTTPステータスコード422が返却されます。

  /v1/threetter/rewards:
    get:
      summary: Get the number of continuous posts and the flag that means whether today post does exist or not.
      description: |
                継続投稿日数と、本日分の投稿が存在するかどうかを示すフラグ(0=本日分無し, 1=本日分あり)を取得します。
                今日の投稿がない場合は昨日分から継続投稿日数を計算します。
      parameters:
      - name: "x-googleid"
        in: "header"
        description: "infomation of target user googleID"
        schema:
          type: "string"
      responses:
        '200':
          description: HTTPステータスコード200と以下の情報を含むJSONオブジェクトを返します。
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  continuation:
                    type: number
                    example: 3
                  today:
                    type: number
                    example: 1

  /v1/threetter/login:
    post:
      summary: |
              Check whether the user with specified google ID does exist in "users" table. 
              if not, add the user into "users" table.
      description: |
                指定したGoogleIDのユーザが"users"tableに存在するかどうかを確認します。 
                いない場合はユーザを"users"tableに追加します。
      parameters: []
      requestBody:
        content:
          application/json:
            schema: 
              type: "object"
              properties:
                googleId:
                  type: string
                  example: testtesttest@gmail.com
                userName:
                  type: string
                  example: John Doe
                picture:
                  type: string
                  example: https://xxx.googleusercontent.com/-xxxx/xxx/xxx/xxx/xxx/photo.jpg
      responses:
        '200':
          description: 既にユーザが存在した場合はHTTPステータスコード200を返します。
        '201':
          description: 新規でユーザを作成した場合はHTTPステータスコード201を返します。

  /v1/threetter/likes:
    get:
      summary: Get "like" number of a specific tgt.
      description: |
                特定のtgtの「いいね！」の回数と、
                そのtgtに対してログインユーザが「いいね！」済か否か返します。
      parameters:
      - name: "x-googleid"
        in: "header"
        description: "infomation of target user googleID"
        schema:
          type: "string"
      - name: "tgtId"
        in: "query"
        description: "target tgt ID"
        schema:
          type: "string"
      responses:
        '200':
          description: |
                      HTTPステータスコード200と以下の情報を含むJSONオブジェクトを返します。
                      likesはtgtに対する「いいね！」の回数、likedByMeは、ログインユーザがそのtgtに対して
                      「いいね！」を実行したかの判定をします。trueの場合は「いいね！」済です。
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  likes:
                    type: number
                    example: 3
                  likedByMe:
                    type: boolean
                    example: true
    post:
      summary: Post a "likes" record when user click to "like" of specific tgt.
      description: 特定のtgtに対し「いいね！」を実施し、likesテーブルにレコードを追加します。
      parameters:
      - name: "x-googleid"
        in: "header"
        description: "infomation of target user googleID"
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema: 
              type: "object"
              properties:
                tgtId:
                  type: string
                  example: "d49d7e74-3fdf-4089-a6ff-aeae66cbd644"
      responses:
        '201':
          description: 新規でレコードを作成し、HTTPステータスコード201を返します。
